<launch>

  <rosparam file="$(find robot_controller)/config/joint_state_controller.yaml" command="load"/>
  <rosparam file="$(find robot_controller)/config/trajectory_controllers.yaml" command="load"/>


  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="debug" default="false"/>
  <arg name="model" default="$(find robot_urdf)/urdf/arctos_urdf.xacro"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
  </include>


  <param name="robot_description" command="$(find xacro)/xacro --inorder $(arg model)" />

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model"
        args="-unpause -urdf -model robot -param robot_description" respawn="false" output="screen"/>

  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" ns="/robot" />

  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" ns="/robot" args="joint_state_controller arm_controller gripper_controller" />
</launch>
